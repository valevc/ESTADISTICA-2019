#Semana3: Descriptores y Medidas
#valentina vargas
#Distinguir entre parámetro y estadístico

#Estimar diferentes medidas descriptivas como tendencia central, forma, apuntamiento y asociación.
data(iris)
iris

# Sumatorio de las longitud del pétalo de la especie setosa
pSetosa <- sum(iris$Petal.Length[which(iris$Species=='setosa')])
pSetosa

#  ¿Cuál es la longitud de la muestra?
dim(iris)
length(iris)
nrow(iris)
length(iris$Petal.Length)
length(iris$Petal.Length[which(iris$Species=='setosa')])

# n de nuestra pregunta
n<-length(iris$Petal.Length[which(iris$Species=='setosa')])
n

# média aritmética 
promedio<- pl.Setosa/n
promedio

#Este proceso se puede convertir en una función que, computacionalmente hablando, va hacer que el proceso sea un poco más rápido.
mi.promedio <- function(x) {
  mi.suma<- sum(x)
  mi.n<-length(x)
  mi.prom <- mi.suma/mi.n
  return(mi.prom)
}

mi.promedio(x= iris$Petal.Length[which(iris$Species=='setosa')])

#Aunque se podría hacer 'a mano', existen funciones que permiten hacer la mayoría de las estimaciones. En este caso todos este proceso puede ser omitido y simplemente usar la función mean()
mean(iris$Petal.Length[which(iris$Species=='setosa')])
hist(iris$Petal.Length[which(iris$Species=='setosa')])

#Ejercicio: Si la columna iris$Petal.Length tuviera valores 'NA', ¿Cómo podría eliminarlos antes de hacer la estimación de la media?
na.rm = TRUE
library(psych)

# Média armónica
harmonic.mean(iris$Petal.Length[which(iris$Species=='setosa')])

# Média geométrica
geometric.mean(iris$Petal.Length[which(iris$Species=='setosa')])

# Mediana
setosa <- iris$Petal.Length[which(iris$Species=='setosa')]

# Ordenar
sort(setosa)

#longitud de setosa
n

#mediana
median(setosa)

#Ejercicio: Genere una función propia que le permita encontrar la mediana, tal y como lo hizo con la media aritmética.
medianaDan<-function(x) {
  orden <- sort(x)
  mi.n<-length(x)
  mi.medio <- orden[mi.n/2]
  return(mi.medio)
}

medianaDan(x= iris$Petal.Length[which(iris$Species=='setosa')])

#Moda
# moda estadística?
mode (setosa)
freq <- table (setosa)
freq
freq [which.max (freq)]

#Ejer: Genere una función propia que le permita calcular la moda

modav <- function(x) {FREC <- table(x)
frec_moda <- FREC[which.max(FREC)]
return(frec_moda)}
modav(setosa)

#Estas medidas de tendencia central podemos verlas sobre la distribución de frecuencias de frecuencia de las longitudes de pétalos de la especie Setosa.

# Rango = x
range(setosa)

# Freq = y
min(freq)
max(freq)

# distribución de frecuencias de setosa
hist(setosa, # histogram
     col = "peachpuff", # column color
     border = "black", 
     prob = TRUE, # show densities instead of frequencies
     xlim = c(0.5,2.5),
     xlab = "Longitud de pétalo",
     main = "Frecuencias de longitud de pétalo de setosa")
lines(density(setosa),
      lwd = 2, # thickness of line
      col = "chocolate3") 

# Generar la distribución continua distribución de masa a partir de los datos observados
# Graficar la media
abline(v = mean(setosa),
       col = "royalblue",
       lwd = 2)

#graficar la mediana
abline(v = median(setosa),
       col = "red",
       lwd = 2)

#poner la leyenda
legend(x = "topright", # location of legend within plot area
       c("Density plot", "Mean", "Median"),
       col = c("chocolate3", "royalblue", "red"),
       lwd = c(2, 2, 2))

#Ejercicio: Después de generar la función del cálculo de moda, grafíquela sobre el histograma.

abline(v = 1.4,
       col = "springgreen1",
       lwd = 2)

#poner la leyenda con la moda

legend(x = "topright", # location of legend within plot area
       c("Density plot", "Mean", "Median", "Mode"),
       col = c("chocolate3", "royalblue", "red", "springgreen1"),
       lwd = c(2, 2, 2, 2))
mean(setosa) #media
median(setosa) #mediana
modav(setosa) #moda

#Medidas de Posición

#Pensemos un momento en cómo nuestros valores crudos están distribuidos. Podríamos ranquearlos, por ejemplo, dividiendo el tango general range(setosa) en 4 cajas. Es decir 1/4, 2/4, 3/4 de la distribución.  En una distribución de probabilidad, un Cuant+il va a marcar la proporción (%) de valores de la población menores o igual qué. ‘Esto es un intervalo de distribución en una variable aleatoria en el cuál nuestra medida cae!’.
density(setosa)

# Cuantíl
quantile(setosa)

# Longitudes menores o iguales al 80%
quantile(setosa,probs = 0.8)



#Un cuartíl estaría determinado en términos de cuartos, un percentíl estaría expresado en términos de 0 a 100.
# Cuartíl
quantile(setosa,probs = c(seq(0, 1, 0.25)))

#Ejer: Genere los cuantiles en intervalos de 0.5
#Existen otras funciones que nos permiten generar cuartiles, incluyendo informaciÃ³n de tendencias centrales. 
#Es decir, density() pero más resumido.
quantile(setosa, probs = c(seq(0,1, 0.5)))

# summary
summary(setosa)

# Lo interesante no es summary, es cómo estraer información de acá y poderlo graficar
str(summary(setosa))
x <- summary(setosa)
class(x)

# Obtener minimo 
x[1]

# distribucion de frecuencias de setosa
hist(setosa, # histogram
     col = "grey80", # column color
     border = "black", 
     prob = TRUE, # show densities instead of frequencies
     xlim = c(0.5,2.5),
     xlab = "Longitud de pétalo",
     main = "Frecuencias de longitud de pétalo de setosa")
lines(density(setosa),
      lwd = 2, # thickness of line
      col = "chocolate3") # Generar la distribuciÃ³n continua distribuciÃ³n de masa a partir de los datos observados

# Graficar la media
abline(v = x[2],
       col = "red1",
       lwd = 2)
abline(v = x[3],
       col = "red4",
       lwd = 2)
abline(v = x[4],
       col = "blue",
       lwd = 2)
abline(v = x[5],
       col = "red1",
       lwd = 2)
legend(x = "topright", # location of legend within plot area
       c("Density plot","1st Qu", "Mean", "Median","3st Qu" ),
       col = c("chocolate3", "royalblue", "red"),
       lwd = c(2, 2, 2))

# aggregate() *permite asignar una operación sobre los niveles de una variable.
aggregate(iris[,1:4], list(Especies = iris$Species), mean)

#Ejercicio: ¿Qué sucede si el número de columnas deseado no se especifica?

#Obtenga la mediana, la moda y los cuantiles para cada especie de iris y para cada variable morfométrica.
## Como no se especificaron las columnas que se usaran, esta función tomará a todas las columnas por defecto.
aggregate(iris[,1:4], list(Especies = iris$Species), median) 
aggregate(iris[,1:4], list(Especies = iris$Species), modav)
aggregate(iris[,1:4],list(Species=iris$Species),quantiles
          
## Medidas de Dispersión

#Las medidas de tendencia central nos permite ver en donde está más concentrada la masa de los datos, pero estas no permiten ver qué tan dispersos están los datos. Imaginemos dos poblaciones de pájaros de la misma especies, donde nos interesa saber la longitud de la cola en cm.
# voy a campo y mido dos poblaciones de pájaros
pop1 <-abs(rnorm(200,mean = 6,sd = 1))
pop2 <-abs(rnorm(200,mean = 6,sd = 5))
pops<-cbind(pop1,pop2)
pops
summary(pops)
boxplot(x = pops,notch=T)

### Varianza y Desviación

#la varianza mide el grado de dispersión de las observaciones alrededor de la media aritmética y la desviación estándar es simplemente la raíz cuadrada de la varianza
#interpretado como el promedio de la distancia de los datos a la media aritmética.
# Varianza
apply(pops,2,var)

# SD
apply(pops,2,sd)
plot(density(pops[,1]))
plot(density(pops[,2]))

#Ejercicio: grafique la distribución de frecuencias de cada población usando histograma y densidad en el mismo gráfico. Adicione la media, moda, mediana.
pop1 <-abs(rnorm(200,mean = 6,sd = 1))
pop2 <-abs(rnorm(200,mean = 6,sd = 5))
pops<-cbind(pop1,pop2)
pops

#Gráfico de la población 1 
range_pop1<- seq(2, 10, 1)
hist(pop1, breaks = range_pop1, main = "Población 1", col = "lightpink", xlab = "Longitud de colas", ylim = c(0.0, 0.5), prob = TRUE)
lines(density(pop1), col = "blue", lwd =2)
abline(v = mean(pop1),col = "lavenderblush4",lwd = 2)
abline(v = median(pop1), col = "lightsalmon", lwd = 2)
abline(v = modaDan(pop1)  , col = "red", lwd =2 )

#la moda se calculo sacando un promedio entre los dos valores más grandes

legend(x = 8, y= 0.5, c("Density plot", "Mean", "Median", "Moda"),
       col = c("chocolate3", "lavenderblush4", "lightsalmon", "red"), lwd = c(2, 2, 2,2))

#Gráfica para la población 2 
range_pop2 <- seq(0.0, 21, 3)
cajas<- cut(pop2, range_pop2)
hist(pop2, breaks = range_pop2, main = "Población 2", col = "lightblue", xlab = "Longitud de colas", ylim = c(0.0, 0.1), prob = TRUE)
lines(density(pop2),lwd = 2, col = ("chocolate3"), breaks= cajas ) 
abline(v = mean(pop2),col = ("lavenderblush4"),lwd = 2)
abline(v = median(pop2), col = ("lightsalmon"), lwd = 2)
abline(v = 4.5 , col = "red", lwd =2 ) 
legend(x = "topright",
       c("Density plot", "Mean", "Median", "Moda"),
       col = c("chocolate3", "lavenderblush4", "lightsalmon", "red"), lwd = c(2, 2, 2,2))

#Estos estadísticos descriptivos pueden ser resumidos en una tabla usando la función describe(). Para más información podemos ir a ayuda para poder ver los parámetros de la función.
# Para las dos columnas qué representan poblaciones
describe(pops)

## Medidas de forma
# Podemos ver lo msmo para niveles internos
for (i in 1:4){plot(density(iris[,i]), main = colnames(iris)[i])}

#Distribuciones que no tienen una simetría como tal.

### Asimetría
#La asimetría se puede encontrar como el tercer momento estándar (1: media, 2: mediana). Nos muestra el signo de las desviaciones con respecto a la media.
#Para ello se puede calcular el coheficiente de asimetría de Fisher (Y). Si y = 0 la distribución es simétrica, si Y es > 0 la distribución es positiva o a la derecha y si Y es < 0 la distribución es negativa o a la izquierda.

# Cálculo
install.packages("EnvStats")
library(EnvStats)
skewness(pops[,1], na.rm = FALSE, method = "fisher")
plot(density(pops[,1]), main= 'Pop1')
abline(v= mean(pops[,1]))
skewness(pops[,2], na.rm = FALSE, method = "fisher")
plot(density(pops[,2]), main= 'Pop3')
abline(v= mean(pops[,2]))
aggregate(iris[,1:4],list(Especies= iris$Species), skewness, na.rm = FALSE, method = "fisher")
set.seed(999)
n.sample <- rnorm(n = 10000, mean = 55, sd = 4.5)
skewness(n.sample, na.rm = FALSE, method = "fisher")
plot(density(n.sample), main= 'Pop3')
abline(v= mean(n.sample))

# Medidas de Apuntamiento
# Curtosis
apply(pops,2,kurtosis)
kurtosi(iris$Sepal.Length[which(iris$Species == 'setosa')])
kurtosi(n.sample)

# Podemos ver lo mismo que describe(), pero para niveles internos
describe.by(iris[,1:4],group = iris$Species)
