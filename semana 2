#Intro a R
#valentina vargas
#Creando_un_objeto
#Ejemplo:

x=2
y<-3
4->z

#Ejercicio_1

#Reasigne 5 a la letra z, usando el operador <-, ahora, pregunte ¿qué es z?
z=5
View(z)
print(z)

#Cuando el objeto existe y es reasignado, el valor anterior es reemplazado. Ese objeto tambien puede ser reasignado con el resultado de una operación.
z=10+2
print(z)
z<-3+rnorm(1)
print(z)

#Ejercicio_2

#Revisar funcion "rnorm"
?rnorm
help(rnorm)

#Objetos_en_secuencia

x=1:10
print(x)
x

#Operacion con objetos
x+1

#Ejercicio_3

#Multiplique x por 2 y sumele 1 y dividalo por 1.5, ese resultado elevelo al cuadrado.
(((x*2)+1)/1.5)^2

#Clases_de_objetos

#character (letras) 
#numeric (números reales) 
#integer (números enteros) 
#complex (números complejos) 
#logical (verdadero/falso o True/False)

animales=c("perro", "gato","raton") #Ejemplo de caracteres
numero<- rep(x = 1:3,3)/1.5 #Ejemplo de numerico
enteros <- seq(from = 1,to = 10,by = 2) #Ejemplo de integros
complejos <- c(2i,5i, 3i) #Ejemplo de complejos
logicos <- c(T,F,TRUE,FALSE) #Ejemplo de logicos

#Ejercicio_4

#Preguntar que tipo de objeto es alguno de los anteriores con el comando "class()"
class(animales)
class(numero)
class(complejos)
class(logicos)

#Vectores_con_varias_clases

prueba<-c(1, "perro", FALSE, "gato", 1.5)
prueba

#Ejercicio_5

#Que clase de vector es "prueba"

class(prueba)

#Vectores_con_niveles

grupo_altura <- factor(c("mediano", "pequeño", "grande", "muy grande"),levels=c("pequeño", "mediano", "grande", "muy grande"))

#Ejercicio_6
#Listar_vectores

ls()

#Matrices_dataframes_y_listas

#Matrices
#Es un conjunto de vectores ordenado por filas y columnas; cada elemento interno es del mismo tipo
vector1<- seq(1:12)
vector1
matrix1<- matrix(data = 1:12,nrow = 3,ncol = 4)
matrix1

#para_extrar_posiciones_se_usan_"[]"

vector1[6]
matrix1[2,3] #En_este_caso_seria=[fila,columna]

#Arreglos
#Multiples matrices, una de tras de la otra

array1<-array(data = c(v1,v2), dim =c(3,4,2))
array1[1,2,1] #[fila, columna, matriz]
array1
arreglo<- array(data = 1:12,dim = c(3,4,3))
arreglo[2,4,3]
arreglo

#Ejercicio_7
#Cree un una secuencia que repita los números de 1 a 4, 3 veces y asignela a un objeto llamado vector1. Ahora, cree una secuencia de números pares del 2 al 24 y asignela a un objeto llamado vector2. Genere un arreglo con ambos vectores y busque la columna 2, fila 1 de la segunda matriz y para la primera.

vector1<-rep(1:4,3) #vector que repite tres veces la secuencia 1,2,3,4
vector2<-seq(from=2, to=24, by=2) #vector con una secuencia que comienza en 2 y termina en 24 contando de 2 en 2
vector1
vector2
v1v2=array(data = c(vector1,vector2),dim = c(3,4,2))
v1v2
v1v2[2,1,2]
v1v2[2,1,1]

#Dataframes

#Son similares a las matrices, pero cada columna puede tener diferentes clases. Cada columna tiene un nombre y es posible asiganar un nombre a cada fila
data(iris)
iris
class(iris)

#Extraer_columna
iris$Sepal.Length
iris$Sepal.Length[36]

#Ejercicio_8
#tome la primera columna y la segunda, concatenelas con c() ¿Qué encuentra? Ahora, tome ambas columnas y use la funcion cbind(), asignelo a un objeto llamado minuevatabla. Haga lo mismo, con las filas del 1:5 y del 10:30, use primero c() y luego rbind() ¿Qué encuentra? Busque el archivo suministrado por el profesor, carguelo a R y revise qué contien. Extraiga las 5 primeras columnas con las 10 primeras filas, escriba esa nueva matriz como csv en su computador.

iris1=iris$Sepal.Length
iris2=iris$Sepal.Width
minuevatabla=cbind(iris1,iris2)
minuevatabla
iris_a=iris$Sepal.Length[1:5]
iris_a
iris_b=iris$Sepal.Width[10:30]
iris_b
minuevatabla2=c(iris_a,iris_b)
minuevatabla2
